Index: src/main/java/com/example/laba1_test/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.laba1_test;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\n\r\npublic class Controller {\r\n    AnimationTimer time = new AnimationTimer(\"0:0:0\");\r\n    Timeline timeline = new Timeline();\r\n    int LifeTime = 5;\r\n    private int status = 0; // 0 = не работает 1 = работает 2 = standby\r\n    private Boolean AIStatusDrone = true;\r\n    private Boolean AIStatusWorker = true;\r\n    @FXML\r\n    private AnchorPane SceneTwo_Background;\r\n    @FXML\r\n    private Button StartB;\r\n    @FXML\r\n    private Button StopB;\r\n    @FXML\r\n    private Label cout1;\r\n    @FXML\r\n    private Label cout2;\r\n    @FXML\r\n    private Label timer;\r\n    @FXML\r\n    private Label FinalTime;\r\n    @FXML\r\n    private Label WorkerName;\r\n    @FXML\r\n    private Label DroneName;\r\n    @FXML\r\n    private ToggleButton HideTimeB;\r\n    @FXML\r\n    private ToggleButton ShowTimeB;\r\n    @FXML\r\n    private Canvas canvas;\r\n    @FXML\r\n    private Button Report;\r\n    @FXML\r\n    private Button DroneControl;\r\n    @FXML\r\n    private Button WorkerControl;\r\n    @FXML\r\n    private Button ConsoleButton;\r\n    private Habitat habitat;\r\n\r\n    @FXML\r\n    void Hide_Show() {\r\n        if (status != 1)\r\n        {\r\n            if (timer.isVisible())\r\n            {\r\n                timer.setVisible(false);\r\n            }\r\n            else\r\n            {\r\n                timer.setVisible(true);\r\n            }\r\n        }\r\n    }\r\n    void ConsoleCommandAdmin(TextArea text, Label label){\r\n        String str = text.getText();\r\n        try {\r\n            text.clear();\r\n        }\r\n        catch (IllegalArgumentException e){\r\n            System.out.println(\"Неудача...\");\r\n        }\r\n        switch (str)\r\n        {\r\n            case(\"help\\n\"):\r\n                label.setText(label.getText() + \"help - справка\\n\"\r\n                        + \"get Drone amount - количество трутней\\n\"\r\n                        + \"get Worker amount - количество рабочих\\n\"\r\n                        + \"cls - очистить вывод консоли\\n\"\r\n                        + \"get Bee status - узнать статус пчёл\\n\");\r\n                break;\r\n            case(\"get Drone amount\\n\"):\r\n                label.setText(label.getText() + \"Количество трутней: \" + habitat.getDroneCount() + \" время: \" + timer.getText() + '\\n');\r\n                break;\r\n            case(\"get Worker amount\\n\"):\r\n                label.setText(label.getText() + \"Количество рабочих: \" + habitat.getWorkerCount() + \" время: \" + timer.getText() + '\\n');\r\n                break;\r\n            case(\"cls\\n\"):\r\n                label.setText(\"\");\r\n                break;\r\n            case(\"get Bee status\\n\"):\r\n                if (AIStatusDrone)\r\n                {\r\n                    label.setText(label.getText() + \"Трутни балдеют, \");\r\n                }\r\n                else\r\n                {\r\n                    label.setText(label.getText() + \"Трутни спят, \");\r\n                }\r\n                if (AIStatusWorker)\r\n                {\r\n                    label.setText(label.getText() + \"рабочие работают\\n\");\r\n                }\r\n                else\r\n                {\r\n                    label.setText(label.getText() + \"у рабочих перекур\\n\");\r\n                }\r\n                break;\r\n            case(\"sus\\n\"):\r\n            {\r\n                label.setText(label.getText() + \"When Bee is sus\\n\" +\r\n                        \" ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣤⣤⣤⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⠀ ⣴⣿⡿⠛⠉⠙⠛⠛⠛⠛⠻⢿⣷⣤⡀⠀⠀⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠋⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠈⢻⣿⣿⡄⠀⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⣸⣿⡏⠀⠀⠀⣠⣶⣾⣿⣿⣿⠿⠿⠿⢿⣿⣿⣄⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⣿⣿⠁⠀⠀⢰⣿⣿⣯⠁⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣷⡄⠀\\n\" +\r\n                        \"⠀⠀⣀⣤⣴⣶⣶⣿⡟⠀⠀⠀⢸⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⠀\\n\" +\r\n                        \"⠀⢰⣿⡟⠋⠉⣹⣿⡇⠀⠀⠀⠘⣿⣿⣿⣿⣷⣦⣤⣤⣤⣶⣶⣶⣶⣿⠀\\n\" +\r\n                        \"⠀⢸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\\n\" +\r\n                        \"⠀⣸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠉⠻⠿⣿⣿⣿⣿⡿⠿⠿⠛⢻⡇⠀⠀\\n\" +\r\n                        \"⠀⣿⣿⠁⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣧⠀⠀\\n\" +\r\n                        \"⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀\\n\" +\r\n                        \"⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀\\n\" +\r\n                        \"⠀⢿⣿⡆⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀\\n\" +\r\n                        \"⠀⠸⣿⣧⡀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠃⠀⠀\\n\" +\r\n                        \"⠀⠀⠛⢿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⣰⣿⣿⣷⣶⣶⣶⣶⠶⠀⢠⣿⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⣽⣿⡏⠁⠀⠀⢸⣿⡇⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⢹⣿⡆⠀⠀⠀⣸⣿⠇⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⢿⣿⣦⣄⣀⣠⣴⣿⣿⠁⠀⠈⠻⣿⣿⣿⣿⡿⠀⠀⠀⠀\\n\" +\r\n                        \"⠀⠀⠀⠀⠀⠀⠀⠈⠛⠻⠿⠿⠿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\");\r\n                break;\r\n            }\r\n            default:\r\n                label.setText(label.getText() + \"Вы ввели несущестующую команду\\n\");\r\n        }\r\n    }\r\n    @FXML\r\n    void ConsoleWindow(){\r\n        if (status != 0)\r\n        {\r\n            Font CS = new Font(\"Comic Sans MS Italic\", 12.0);\r\n            Stage window = new Stage();\r\n            window.initModality(Modality.APPLICATION_MODAL);\r\n            Pane pane = new Pane();\r\n            pane.setStyle(\"-fx-background-color: #000000\");\r\n            TextArea text = new TextArea();\r\n            text.setPrefHeight(25);\r\n            text.setPrefWidth(200);\r\n            text.setLayoutX(250);\r\n            text.setLayoutY(450);\r\n            text.setStyle(\"-fx-control-inner-background:#000000; -fx-font-family: Consolas; -fx-highlight-fill: #00ff00; -fx-highlight-text-fill: #000000; -fx-text-fill: #00ff00;\"); // Честно украдено со стак оверфлоу, потому что мне лень через ColorPicker выискивать подходящие цвета для консоли\r\n            Label label = new Label(\"Для справки введите help\\n\");\r\n            label.setStyle(\"-fx-control-inner-background:#000000; -fx-font-family: Consolas; -fx-highlight-fill: #00ff00; -fx-highlight-text-fill: #000000; -fx-text-fill: #00ff00;\");\r\n            label.setMaxWidth(700);\r\n            label.setMaxHeight(450);\r\n            //\r\n            pane.getChildren().addAll(text);\r\n            pane.getChildren().addAll(label);\r\n            Scene scene = new Scene(pane, 700, 500);\r\n            window.setScene(scene);\r\n            window.setTitle(\"Пчелиная консоль\");\r\n            window.setResizable(false);\r\n            window.show();\r\n            text.textProperty().addListener((observable, oldValue, newValue) -> {\r\n                if (text.getText().endsWith(\"\\n\")) {\r\n                    ConsoleCommandAdmin(text, label);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    @FXML\r\n    void ButtonControlVisible(){\r\n        timer.setVisible(true);\r\n        ShowTimeB.setSelected(true);\r\n\r\n    }\r\n    @FXML\r\n    void ButtonControlNonVisible(){\r\n        timer.setVisible(false);\r\n        HideTimeB.setSelected(true);\r\n    }\r\n    @FXML\r\n    void pauseGen() throws IOException, InterruptedException {\r\n        if (Report.getText().equals(\"Скрыть отчёт\")) {\r\n            status = 2;\r\n            timeline.pause();\r\n            ModalWindow.newWindow(\"Отчёт генерации\", Controller.this, habitat);\r\n        }\r\n        else\r\n        {\r\n            exit();\r\n        }\r\n\r\n    }\r\n    @FXML\r\n    void continueGen() {\r\n        status = 1;\r\n        timeline.play();\r\n        try {\r\n            habitat.ContinueThreads();\r\n        } catch (InterruptedException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    @FXML\r\n    void exit() throws IOException {\r\n        if (status != 0) {\r\n            for (AbstractObject x : habitat.getObjects())\r\n            {\r\n                x.allstop();\r\n            }\r\n            StopB.setDisable(true);\r\n            StartB.setDisable(true);\r\n            ShowTimeB.setDisable(true);\r\n            HideTimeB.setDisable(true);\r\n            Report.setDisable(true);\r\n            ConsoleButton.setDisable(true);\r\n            canvas.setVisible(false);\r\n            timer.setVisible(false);\r\n            try {\r\n                habitat.StopThreads();\r\n            } catch (InterruptedException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            cout1.setVisible(true);\r\n            cout2.setVisible(true);\r\n            FinalTime.setVisible(true);\r\n            DroneName.setVisible(true);\r\n            WorkerName.setVisible(true);\r\n            try {\r\n                FileWriter writer = new FileWriter(\"src/main/resources/save.txt\");\r\n                writer.write(Double.toString(habitat.getChance()) + '\\n' // Шанс спавна\r\n                + Integer.toString(habitat.getInterval()) + '\\n' // Интервал\r\n                + Integer.toString(LifeTime) + '\\n' // Время жизни\r\n                + Boolean.toString(AIStatusWorker) + '\\n' // Статус рабочих\r\n                + Boolean.toString(AIStatusDrone) + '\\n' // Статус трутней\r\n                );\r\n\r\n                writer.close();\r\n            }\r\n            catch (Exception e){\r\n\r\n            }\r\n            cout1.setText(Integer.toString(habitat.getDroneCount()));\r\n            cout2.setText(Integer.toString(habitat.getWorkerCount()));\r\n            FinalTime.setText(time.getCurrentTime());\r\n            timeline.stop();\r\n        }\r\n    }\r\n    @FXML\r\n    void SetReportVisibility(){\r\n        if (Report.getText().equals(\"Скрыть отчёт\"))\r\n        {\r\n            Report.setText(\"Показать отчёт\");\r\n        }\r\n        else\r\n        {\r\n            Report.setText(\"Скрыть отчёт\");\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void start() {\r\n        status = 1;\r\n        StartB.setDisable(true);\r\n        StopB.setDisable(false);\r\n        if (time.getCurrentTime().equals(\"0:0:0\")) {\r\n            timeline = new Timeline(\r\n                    new KeyFrame(Duration.seconds(0.1),\r\n                            e -> {\r\n                                time.OneTick();\r\n                                timer.setText(time.getCurrentTime());\r\n                                if (time.MSecond == 0)\r\n                                {\r\n                                    habitat.update(time.Second, time, LifeTime, SceneTwo_Background, Controller.this); // Че за хуйня блять\r\n\r\n                                }\r\n                            }));\r\n            timer.setText(time.getCurrentTime());\r\n            timeline.setCycleCount(Timeline.INDEFINITE);\r\n            timeline.play();\r\n        }\r\n    }\r\n    @FXML\r\n    void initialize() {\r\n        habitat = ModalWindow.HelloWindow(\"Привет, пчеловод!\", Controller.this);\r\n        if (AIStatusDrone) {\r\n            DroneControl.setText(\"Трутни спать\");\r\n        }\r\n        else\r\n        {\r\n            DroneControl.setText(\"Трутни бегать\");\r\n        }\r\n        if (AIStatusWorker) {\r\n            WorkerControl.setText(\"Рабочие спать\");\r\n        }\r\n        else\r\n        {\r\n            WorkerControl.setText(\"Рабочие работать\");\r\n        }\r\n        status = 0;\r\n        cout1.setVisible(false);\r\n        cout2.setVisible(false);\r\n        FinalTime.setVisible(false);\r\n        DroneName.setVisible(false);\r\n        WorkerName.setVisible(false);\r\n        StopB.setDisable(true);\r\n\r\n    }\r\n    @FXML\r\n    public void ShowCurrentObjectsState() throws IOException {\r\n        status = 2;\r\n        timeline.pause();\r\n        ModalWindow.ObjShow(\"Отчёт генерации\", Controller.this, habitat);\r\n    }\r\n\r\n    @FXML\r\n    public void PauseAiDrone(){\r\n        Drone new_Drone = new Drone();\r\n        if (AIStatusDrone) {\r\n            DroneControl.setText(\"Трутни бегать\");\r\n            AIStatusDrone = false;\r\n            for (AbstractObject x : habitat.getObjects()) {\r\n                if (x.getClass() == new_Drone.getClass()) {\r\n                    x.StopTransition();\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            DroneControl.setText(\"Трутни спать\");\r\n            AIStatusDrone = true;\r\n            for (AbstractObject x : habitat.getObjects()) {\r\n                if (x.getClass() == new_Drone.getClass()) {\r\n                    x.ContinueTransition();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @FXML\r\n    public void PauseAiWorker(){\r\n        Worker new_Worker = new Worker();\r\n        if (AIStatusWorker) {\r\n            WorkerControl.setText(\"Рабочие работать\");\r\n            AIStatusWorker = false;\r\n            for (AbstractObject x : habitat.getObjects()) {\r\n                if (x.getClass() == new_Worker.getClass()) {\r\n                    x.StopTransition();\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            WorkerControl.setText(\"Рабочие спать\");\r\n            AIStatusWorker = true;\r\n            for (AbstractObject x : habitat.getObjects()) {\r\n                if (x.getClass() == new_Worker.getClass()) {\r\n                    x.ContinueTransition();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public Boolean getAIStatusWorker(){return AIStatusWorker;}\r\n    public Boolean getAIStatusDrone(){return AIStatusDrone;}\r\n    public void setAIStatusWorker(Boolean x){this.AIStatusWorker = x;}\r\n    public void setAIStatusDrone(Boolean x){this.AIStatusDrone = x;}\r\n    public void setLifeTime(int x){LifeTime = x;}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/laba1_test/Controller.java b/src/main/java/com/example/laba1_test/Controller.java
--- a/src/main/java/com/example/laba1_test/Controller.java	(revision b334cf8b2576644ea0260a8a606740945a19d6d3)
+++ b/src/main/java/com/example/laba1_test/Controller.java	(date 1710565437685)
@@ -117,26 +117,7 @@
                 break;
             case("sus\n"):
             {
-                label.setText(label.getText() + "When Bee is sus\n" +
-                        " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣤⣤⣤⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⠀ ⣴⣿⡿⠛⠉⠙⠛⠛⠛⠛⠻⢿⣷⣤⡀⠀⠀⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠋⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠈⢻⣿⣿⡄⠀⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⣸⣿⡏⠀⠀⠀⣠⣶⣾⣿⣿⣿⠿⠿⠿⢿⣿⣿⣄⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⣿⣿⠁⠀⠀⢰⣿⣿⣯⠁⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣷⡄⠀\n" +
-                        "⠀⠀⣀⣤⣴⣶⣶⣿⡟⠀⠀⠀⢸⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⠀\n" +
-                        "⠀⢰⣿⡟⠋⠉⣹⣿⡇⠀⠀⠀⠘⣿⣿⣿⣿⣷⣦⣤⣤⣤⣶⣶⣶⣶⣿⠀\n" +
-                        "⠀⢸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\n" +
-                        "⠀⣸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠉⠻⠿⣿⣿⣿⣿⡿⠿⠿⠛⢻⡇⠀⠀\n" +
-                        "⠀⣿⣿⠁⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣧⠀⠀\n" +
-                        "⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀\n" +
-                        "⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀\n" +
-                        "⠀⢿⣿⡆⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀\n" +
-                        "⠀⠸⣿⣧⡀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠃⠀⠀\n" +
-                        "⠀⠀⠛⢿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⣰⣿⣿⣷⣶⣶⣶⣶⠶⠀⢠⣿⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⣽⣿⡏⠁⠀⠀⢸⣿⡇⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⢹⣿⡆⠀⠀⠀⣸⣿⠇⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⢿⣿⣦⣄⣀⣠⣴⣿⣿⠁⠀⠈⠻⣿⣿⣿⣿⡿⠀⠀⠀⠀\n" +
-                        "⠀⠀⠀⠀⠀⠀⠀⠈⠛⠻⠿⠿⠿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n");
+                label.setText(label.getText() + "When Bee is sus\n" + " ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣤⣤⣤⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⠀ ⣴⣿⡿⠛⠉⠙⠛⠛⠛⠛⠻⢿⣷⣤⡀⠀⠀⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠋⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠈⢻⣿⣿⡄⠀⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⣸⣿⡏⠀⠀⠀⣠⣶⣾⣿⣿⣿⠿⠿⠿⢿⣿⣿⣄⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⣿⣿⠁⠀⠀⢰⣿⣿⣯⠁⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣷⡄⠀\n" + "⠀⠀⣀⣤⣴⣶⣶⣿⡟⠀⠀⠀⢸⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⠀\n" + "⠀⢰⣿⡟⠋⠉⣹⣿⡇⠀⠀⠀⠘⣿⣿⣿⣿⣷⣦⣤⣤⣤⣶⣶⣶⣶⣿⠀\n" + "⠀⢸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀\n" + "⠀⣸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠉⠻⠿⣿⣿⣿⣿⡿⠿⠿⠛⢻⡇⠀⠀\n" + "⠀⣿⣿⠁⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣧⠀⠀\n" + "⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀\n" + "⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀\n" + "⠀⢿⣿⡆⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀\n" + "⠀⠸⣿⣧⡀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠃⠀⠀\n" + "⠀⠀⠛⢿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⣰⣿⣿⣷⣶⣶⣶⣶⠶⠀⢠⣿⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⣽⣿⡏⠁⠀⠀⢸⣿⡇⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⢹⣿⡆⠀⠀⠀⣸⣿⠇⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⢿⣿⣦⣄⣀⣠⣴⣿⣿⠁⠀⠈⠻⣿⣿⣿⣿⡿⠀⠀⠀⠀\n" + "⠀⠀⠀⠀⠀⠀⠀⠈⠛⠻⠿⠿⠿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n");
                 break;
             }
             default:
Index: src/main/java/com/example/laba1_test/ModalWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.laba1_test;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.Map;\r\nimport java.util.TreeMap;\r\n\r\npublic class ModalWindow {\r\n    public static boolean isNumericInt(String str) {\r\n        try {\r\n            Integer.parseInt(str);\r\n            return true;\r\n        } catch (NumberFormatException e) {\r\n            return false;\r\n        }\r\n    }\r\n    public static void setSettings(Controller controller, Habitat habitat){\r\n        try {\r\n            FileReader reader = new FileReader(\"src/main/resources/save.txt\");\r\n            int data = reader.read();\r\n            String str = \"\";\r\n            while (data != -1)\r\n            {\r\n                str += (char)data;\r\n                data = reader.read();\r\n            }\r\n            reader.close();\r\n            String[] result = str.split(\"\\n\");\r\n            double Chance = Double.parseDouble(result[0]);\r\n            int Interval = Integer.parseInt(result[1]);\r\n            int lifetime = Integer.parseInt(result[2]);\r\n            Boolean AIWorker = Boolean.parseBoolean(result[3]);\r\n            Boolean AIDrone = Boolean.parseBoolean(result[4]);\r\n            if (Chance >= 0 && Chance <= 1 && Interval >= 1)\r\n            {\r\n                controller.setAIStatusWorker(AIWorker);\r\n                controller.setAIStatusDrone(AIDrone);\r\n                controller.setLifeTime(lifetime);\r\n                habitat.setChance(Chance);\r\n                habitat.setInterval(Interval);\r\n            }\r\n        }\r\n        catch (FileNotFoundException e){\r\n            e.printStackTrace();\r\n            System.out.println(\"Файл сохранения не найден\");\r\n        }\r\n        catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    public static void newWindow(String Name, Controller Controller, Habitat habitat) throws InterruptedException {\r\n        Font CS = new Font(\"Comic Sans MS Italic\", 21.0);\r\n        Stage window = new Stage();\r\n        window.initModality(Modality.APPLICATION_MODAL);\r\n        Pane pane = new Pane();\r\n        Button BtnStop = new Button(\"ОК\");\r\n        BtnStop.setLayoutX(300);\r\n        BtnStop.setLayoutY(450);\r\n        Button BtnContinue = new Button(\"Отмена\");\r\n        BtnContinue.setLayoutX(350);\r\n        BtnContinue.setLayoutY(450);\r\n        habitat.StopThreads();\r\n        BtnStop.setOnAction(event -> {\r\n            try {\r\n                Controller.exit();\r\n                window.close();\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n        BtnContinue.setOnAction(event -> {\r\n            window.close();\r\n            try {\r\n                habitat.ContinueThreads();\r\n\r\n            } catch (InterruptedException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            Controller.continueGen();\r\n        });\r\n        TextArea text = new TextArea(\"Количество рабочих пчёл: \" + habitat.getWorkerCount() + \"\\nКоличество трутней: \" + habitat.getDroneCount() + \"\\nТекущее время симуляции: \" + Controller.time.getCurrentTime());\r\n        text.setEditable(false);\r\n        text.setFont(CS);\r\n        text.setMaxHeight(120);\r\n        text.setMaxWidth(400);\r\n        text.setLayoutX(180);\r\n        text.setLayoutY(160);\r\n        pane.getChildren().addAll(BtnStop);\r\n        pane.getChildren().addAll(BtnContinue);\r\n        pane.getChildren().addAll(text);\r\n        Scene scene = new Scene(pane, 700, 500);\r\n        window.setScene(scene);\r\n        window.setTitle(Name);\r\n        window.setResizable(false);\r\n        window.showAndWait();\r\n    }\r\n    public static Habitat HelloWindow(String Name, Controller controller) {\r\n        int b = 1;\r\n        Habitat habitat = new Habitat(-1, 5);\r\n        boolean check = false;\r\n        Font CS = new Font(\"Comic Sans MS Italic\", 12.0);\r\n        Stage window = new Stage();\r\n        window.initModality(Modality.APPLICATION_MODAL);\r\n        Pane pane = new Pane();\r\n        Button BtnOK = new Button(\"ОК\");\r\n        BtnOK.setLayoutX(300);\r\n        BtnOK.setLayoutY(450);\r\n        Button BtnLoad = new Button(\"Загрузить\");\r\n        BtnLoad.setLayoutX(350);\r\n        BtnLoad.setLayoutY(450);\r\n        BtnOK.setOnAction(event -> window.close());\r\n        Habitat finalHabitat = habitat;\r\n        BtnLoad.setOnAction(event -> {\r\n            window.close();\r\n            setSettings(controller, finalHabitat);\r\n        });\r\n        TextArea text = new TextArea(\"Добро пожаловать, мой пчеловод. Сегодня мы займёмся разведением пчёл!\\n\" +\r\n                \"Для начала необходимо ознакомиться с базовыми командами программы.\\n\" +\r\n                \"Кнопки \\\"Старт\\\" и \\\"Стоп\\\" начинают процесс рождения пчёл и останавливают соответственно.\\n\" +\r\n                \"Кнопки \\\"Показать таймер\\\" и \\\"Скрыть таймер\\\" отображают и скрывают таймер в верхнем левом углу\\n\" +\r\n                \"Последняя кнопка отвечает за разрешение отображения модального окна при завершении симуляции\\n\" +\r\n                \"Ещё есть кнопки, отвечающие за интеллект пчёл.\" +\r\n                \"Удачи.\");\r\n        text.setEditable(false);\r\n        text.setPrefHeight(150);\r\n        text.setPrefWidth(610);\r\n        text.setLayoutX(45);\r\n        text.setLayoutY(100);\r\n        text.setFont(CS);\r\n        TextArea varA = new TextArea(\"Введите интервал появления пчел.\\nВыберите шанс их появления.\");\r\n        varA.setPrefHeight(50);\r\n        varA.setPrefWidth(280);\r\n        varA.setLayoutX(180);\r\n        varA.setLayoutY(350);\r\n        TextArea varLifeTime = new TextArea(\"Введите время жизни пчел.\");\r\n        varLifeTime.setPrefHeight(50);\r\n        varLifeTime.setPrefWidth(280);\r\n        varLifeTime.setLayoutX(180);\r\n        varLifeTime.setLayoutY(300);\r\n        ObservableList<String> percents = FXCollections.observableArrayList(\"10%\", \"20%\", \"30%\", \"40%\", \"50%\", \"60%\", \"70%\", \"80%\", \"90%\", \"100%\");\r\n        ComboBox<String> varB = new ComboBox<String>(percents);\r\n        varB.setValue(\"90%\");\r\n        varB.setPrefHeight(15);\r\n        varB.setPrefWidth(280);\r\n        varB.setLayoutX(180);\r\n        varB.setLayoutY(400);\r\n        //\r\n        pane.getChildren().addAll(BtnOK, text, varA, varB, varLifeTime, BtnLoad);\r\n        Scene scene = new Scene(pane, 700, 500);\r\n        window.setScene(scene);\r\n        window.setTitle(Name);\r\n        window.setResizable(false);\r\n        window.showAndWait();\r\n        double a = Double.parseDouble(varB.getValue().substring(0, varB.getValue().length() - 1)) / 100;\r\n        if (habitat.getInterval() == -1) {\r\n            if (ModalWindow.isNumericInt(varLifeTime.getText()) && Integer.parseInt(varLifeTime.getText()) > 0) {\r\n                controller.LifeTime = Integer.parseInt(varLifeTime.getText());\r\n            }\r\n            if (ModalWindow.isNumericInt(varA.getText()) && Integer.parseInt(varA.getText()) > 0) {\r\n                b = Integer.parseInt(varA.getText());\r\n            }\r\n            habitat = new Habitat(b, a);\r\n        }\r\n        return habitat;\r\n    }\r\n    public static void ObjShow(String Name, Controller Controller, Habitat habitat){\r\n        Font CS = new Font(\"Comic Sans MS Italic\", 21.0);\r\n        Stage window = new Stage();\r\n        window.initModality(Modality.APPLICATION_MODAL);\r\n        Pane pane = new Pane();\r\n        Button BtnContinue = new Button(\"Ясно.\");\r\n        try {\r\n            habitat.StopThreads();\r\n        } catch (InterruptedException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        BtnContinue.setOnAction(event -> {\r\n            try {\r\n                habitat.ContinueThreads();\r\n            } catch (InterruptedException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n            window.close();\r\n        });\r\n        TreeMap<String, String> t = habitat.getSpawnSet();\r\n        TextArea text;\r\n        if (t.isEmpty())\r\n        {\r\n            text = new TextArea(\"Вперёд батьки не лезь...\");\r\n        }\r\n        else\r\n        {\r\n            text = new TextArea(\"Время рождения\\t\\tID пчелы\\n\");\r\n        }\r\n        for (Map.Entry<String, String> entry : t.entrySet()) {\r\n            text.appendText(entry.getKey() + \"\\t\\t\\t\\t\" + entry.getValue() + \"\\n\");\r\n        }\r\n        text.setEditable(false);\r\n        text.setFont(CS);\r\n        BtnContinue.setLayoutX(340);\r\n        BtnContinue.setLayoutY(450);\r\n        text.setMaxHeight(430);\r\n        text.setMaxWidth(700);\r\n        pane.getChildren().addAll(BtnContinue);\r\n        pane.getChildren().addAll(text);\r\n        Scene scene = new Scene(pane, 700, 500);\r\n        window.setScene(scene);\r\n        window.setTitle(Name);\r\n        window.setResizable(false);\r\n        window.showAndWait();\r\n        Controller.continueGen();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/laba1_test/ModalWindow.java b/src/main/java/com/example/laba1_test/ModalWindow.java
--- a/src/main/java/com/example/laba1_test/ModalWindow.java	(revision b334cf8b2576644ea0260a8a606740945a19d6d3)
+++ b/src/main/java/com/example/laba1_test/ModalWindow.java	(date 1710564357381)
@@ -4,6 +4,7 @@
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
 import javafx.scene.Scene;
+import javafx.scene.control.Alert;
 import javafx.scene.control.Button;
 import javafx.scene.control.ComboBox;
 import javafx.scene.control.TextArea;
@@ -19,6 +20,13 @@
 import java.util.TreeMap;
 
 public class ModalWindow {
+    public static void showAlertError() {
+        Alert alert = new Alert(Alert.AlertType.ERROR);
+        alert.setTitle("Опа...");
+        alert.setHeaderText("Куда лезешь?");
+        alert.setContentText("Я за тебя значения по умолчанию поставил...(0.9, 1)");
+        alert.showAndWait();
+    }
     public static boolean isNumericInt(String str) {
         try {
             Integer.parseInt(str);
@@ -174,6 +182,10 @@
             }
             habitat = new Habitat(b, a);
         }
+        if (habitat.getInterval() <= 0)
+        {
+            showAlertError();
+        }
         return habitat;
     }
     public static void ObjShow(String Name, Controller Controller, Habitat habitat){
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0231e1f4-bbd7-43d6-ad22-64ea6147f2ce\" name=\"Changes\" comment=\"консоль от 5й лабы готова + дебаг состояния пчёл\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/Habitat.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/Habitat.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/ModalWindow.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/ModalWindow.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/Worker.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/laba1_test/Worker.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/example/laba1_test/Habitat.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/example/laba1_test/Habitat.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/example/laba1_test/Worker.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/example/laba1_test/Worker.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/example/laba1_test/hello-view.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/example/laba1_test/hello-view.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2d5tttT0FQVnMx254SArGJh685H\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;BeeBranch&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/suxov/IdeaProjects/laba1/src/main/resources&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\suxov\\IdeaProjects\\laba1\\src\\main\\resources\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\suxov\\IdeaProjects\\laba1\\src\\main\\resources\" />\r\n      <recent name=\"C:\\Users\\suxov\\IdeaProjects\\laba1\\src\\main\\resources\\com\\example\\laba1_test\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"com.example.laba1_test\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0231e1f4-bbd7-43d6-ad22-64ea6147f2ce\" name=\"Changes\" comment=\"\" />\r\n      <created>1709309984722</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1709309984722</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Почти вторая лаба\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709454789609</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709454789609</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Надо сделать логику дерева в ModalWindow 141 стр.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709569923079</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709569923079</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Надо сделать логику дерева в ModalWindow 141 стр.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709569933234</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709569933234</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Надо сделать логику дерева в ModalWindow 141 стр.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709569937186</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709569937186</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Тестовое представление вывода информации об объектах. Почти 3я лаба\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709623747929</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709623747929</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Habitat 45 заменить цикл на проход по всем ключам SpawnSet`у и если ключ &gt;= LifeT - Удалять всё что связано с объектом, который записан на данное время\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709748366979</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709748366979</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Всё идеально работает. Осталось лишь задебажить модал виндов и сделать так, чтобы SpawnSet нормально записывал в себя значения\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709877697625</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709877697625</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Всё идеально работает. Осталось лишь задебажить модал виндов.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709878707947</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709878707947</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Готовая 3я лаба\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709880048130</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709880048130</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Точно готовая 3я лаба\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709991737844</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709991737844</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"BeeЗумие\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709999980218</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709999980218</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"BeeЗумие нахуй\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710065325015</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710065325015</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"47 Drone альтернативу wait, а то там пиздец\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710152071250</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710152071250</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"4я лаба\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710337916604</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710337916604</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"консоль от 5й лабы готова + дебаг состояния пчёл\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710357417356</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710357417356</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"16\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"COLUMN_ID_WIDTH\">\r\n                <map>\r\n                  <entry key=\"Table.Default.Author.ColumnIdWidth\" value=\"98\" />\r\n                  <entry key=\"Table.Default.Date.ColumnIdWidth\" value=\"114\" />\r\n                  <entry key=\"Table.Space.CommitStatus.ColumnIdWidth\" value=\"114\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Почти вторая лаба\" />\r\n    <MESSAGE value=\"Надо сделать логику дерева в ModalWindow 141 стр.\" />\r\n    <MESSAGE value=\"Тестовое представление вывода информации об объектах. Почти 3я лаба\" />\r\n    <MESSAGE value=\"Habitat 45 заменить цикл на проход по всем ключам SpawnSet`у и если ключ &gt;= LifeT - Удалять всё что связано с объектом, который записан на данное время\" />\r\n    <MESSAGE value=\"Всё идеально работает. Осталось лишь задебажить модал виндов и сделать так, чтобы SpawnSet нормально записывал в себя значения\" />\r\n    <MESSAGE value=\"Всё идеально работает. Осталось лишь задебажить модал виндов.\" />\r\n    <MESSAGE value=\"Готовая 3я лаба\" />\r\n    <MESSAGE value=\"Точно готовая 3я лаба\" />\r\n    <MESSAGE value=\"BeeЗумие\" />\r\n    <MESSAGE value=\"BeeЗумие нахуй\" />\r\n    <MESSAGE value=\"47 Drone альтернативу wait, а то там пиздец\" />\r\n    <MESSAGE value=\"4я лаба\" />\r\n    <MESSAGE value=\"консоль от 5й лабы готова + дебаг состояния пчёл\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"консоль от 5й лабы готова + дебаг состояния пчёл\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b334cf8b2576644ea0260a8a606740945a19d6d3)
+++ b/.idea/workspace.xml	(date 1710565437793)
@@ -5,14 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0231e1f4-bbd7-43d6-ad22-64ea6147f2ce" name="Changes" comment="консоль от 5й лабы готова + дебаг состояния пчёл">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_03_2024_13_44__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_03_2024_13_44__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/Habitat.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/Habitat.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/ModalWindow.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/ModalWindow.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/Worker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/laba1_test/Worker.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/com/example/laba1_test/Habitat.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/example/laba1_test/Habitat.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/com/example/laba1_test/Worker.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/example/laba1_test/Worker.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/com/example/laba1_test/hello-view.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/example/laba1_test/hello-view.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
